Description: Work around TLS 1.2 failures for some broken servers that
 "hang" if a client hello record length exceeds 255 bytes.
 .
    1. Set OPENSSL_MAX_TLS1_2_CIPHER_LENGTH=50. This will truncate
       the number of ciphers sent in the client hello.
    2. Set OPENSSL_NO_TLS1_2_CLIENT to disable TLS 1.2 client support
       entirely.
    3. Adjust test suite to cope with TLS 1.2 client being disabled
 
 Also, check TLS_get_client_version() rather than TLS1_get_versions() to avoid
 improper truncation of client hello cipher lists. This change has been
 forwarded upstream in rt #2881.
Bug-Ubuntu: https://bugs.launchpad.net/bugs/965371
Bug-Debian: http://bugs.debian.org/665452
Bug: http://rt.openssl.org/Ticket/Display.html?id=2771
Bug: http://rt.openssl.org/Ticket/Display.html?id=2881
Forwarded: not-needed
Last-Update: 2013-05-22

Index: openssl-1.0.1e/Configure
===================================================================
--- openssl-1.0.1e.orig/Configure	2013-05-22 10:19:55.169205716 -0400
+++ openssl-1.0.1e/Configure	2013-05-22 10:19:55.165205716 -0400
@@ -106,7 +106,7 @@
 my $gcc_devteam_warn = "-Wall -pedantic -DPEDANTIC -Wno-long-long -Wsign-compare -Wmissing-prototypes -Wshadow -Wformat -Werror -DCRYPTO_MDEBUG_ALL -DCRYPTO_MDEBUG_ABORT -DREF_CHECK -DOPENSSL_NO_DEPRECATED";
 
 # There are no separate CFLAGS/CPPFLAGS/LDFLAGS, set everything in CFLAGS
-my $debian_cflags = `dpkg-buildflags --get CFLAGS` . `dpkg-buildflags --get CPPFLAGS` . `dpkg-buildflags --get LDFLAGS` . "-Wa,--noexecstack -Wall";
+my $debian_cflags = `dpkg-buildflags --get CFLAGS` . `dpkg-buildflags --get CPPFLAGS` . `dpkg-buildflags --get LDFLAGS` . "-Wa,--noexecstack -Wall -DOPENSSL_NO_TLS1_2_CLIENT -DOPENSSL_MAX_TLS1_2_CIPHER_LENGTH=50";
 $debian_cflags =~ s/\n/ /g;
 
 my $strict_warnings = 0;
Index: openssl-1.0.1e/ssl/s23_clnt.c
===================================================================
--- openssl-1.0.1e.orig/ssl/s23_clnt.c	2013-05-22 10:19:55.169205716 -0400
+++ openssl-1.0.1e/ssl/s23_clnt.c	2013-05-22 10:19:55.165205716 -0400
@@ -491,7 +491,7 @@
 			 * as hack workaround chop number of supported ciphers
 			 * to keep it well below this if we use TLS v1.2
 			 */
-			if (TLS1_get_version(s) >= TLS1_2_VERSION
+			if (TLS1_get_client_version(s) >= TLS1_2_VERSION
 				&& i > OPENSSL_MAX_TLS1_2_CIPHER_LENGTH)
 				i = OPENSSL_MAX_TLS1_2_CIPHER_LENGTH & ~1;
 #endif
Index: openssl-1.0.1e/test/testssl
===================================================================
--- openssl-1.0.1e.orig/test/testssl	2013-02-11 10:26:04.000000000 -0500
+++ openssl-1.0.1e/test/testssl	2013-05-22 10:20:55.661207265 -0400
@@ -120,7 +120,7 @@
 $ssltest -bio_pair -server_auth -client_auth -app_verify $CA $extra || exit 1
 
 echo "Testing ciphersuites"
-for protocol in TLSv1.2 SSLv3; do
+for protocol in TLSv1.1 SSLv3; do
   echo "Testing ciphersuites for $protocol"
   for cipher in `../util/shlib_wrap.sh ../apps/openssl ciphers "RSA+$protocol" | tr ':' ' '`; do
     echo "Testing $cipher"
