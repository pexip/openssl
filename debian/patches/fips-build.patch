diff --git a/apps/Makefile b/apps/Makefile
index 95f499e..5de2c2e 100644
--- a/apps/Makefile
+++ b/apps/Makefile
@@ -158,7 +158,7 @@ $(EXE): progs.h $(E_OBJ) $(PROGRAM).o $(DLIBCRYPTO) $(DLIBSSL)
 	fi; \
 	LIBRARIES="$(LIBSSL) $(LIBKRB5) $(LIBCRYPTO)" ; \
 	$(MAKE) -f $(TOP)/Makefile.shared -e \
-		APPNAME=$(EXE) OBJECTS="$(PROGRAM).o $(E_OBJ)" \
+		MAKEFLAGS= CC="$${CC:-$(CC)}" APPNAME=$(EXE) OBJECTS="$(PROGRAM).o $(E_OBJ)" \
 		LIBDEPS="$(PEX_LIBS) $$LIBRARIES $(EX_LIBS)" \
 		link_app.$${shlib_target}
 	@(cd ..; $(MAKE) rehash)
diff --git a/Makefile.org b/Makefile.org
index 2db31ea..7a74163 100644
--- a/Makefile.org
+++ b/Makefile.org
@@ -302,7 +302,7 @@ fips_premain_dso$(EXE_EXT): libcrypto.a
 			FIPSLD_CC="$(CC)"; CC=$(FIPSDIR)/bin/fipsld; \
 			export CC FIPSLD_CC FIPSLD_LIBCRYPTO; \
 		fi; \
-		$(MAKE) -e SHLIBDIRS=crypto  CC="$${CC:-$(CC)}" build-shared && \
+		$(MAKE) -e MAKEFLAGS= SHLIBDIRS=crypto CC="$${CC:-$(CC)}" build-shared && \
 		(touch -c fips_premain_dso$(EXE_EXT) || :); \
 	else \
 		echo "There's no support for shared libraries on this platform" >&2; \
diff --git a/test/Makefile b/test/Makefile
index 4c9eabc..38113e3 100644
--- a/test/Makefile
+++ b/test/Makefile
@@ -360,7 +360,7 @@ FIPS_BUILD_CMD=shlib_target=; if [ -n "$(SHARED_LIBS)" ]; then \
 		FIPSLD_CC="$(CC)"; CC=$(FIPSDIR)/bin/fipsld; export CC FIPSLD_CC; \
 	fi; \
 	$(MAKE) -f $(TOP)/Makefile.shared -e \
-		CC="$${CC}" APPNAME=$$target$(EXE_EXT) OBJECTS="$$target.o" \
+		MAKEFLAGS= CC="$${CC:-$(CC)}" APPNAME=$$target$(EXE_EXT) OBJECTS="$$target.o" \
 		LIBDEPS="$(PEX_LIBS) $$LIBRARIES $(EX_LIBS)" \
 		link_app.$${shlib_target}
 
diff --git a/test/testfipsssl b/test/testfipsssl
index c4836ed..cac7c98 100644
--- a/test/testfipsssl
+++ b/test/testfipsssl
@@ -39,7 +39,7 @@ echo test ssl3 is forbidden in FIPS mode
 $ssltest -ssl3 $extra && exit 1
 
 echo test ssl2 is forbidden in FIPS mode
-$ssltest -ssl2 $extra && exit 1
+$ssltest -ssl2 $extra || exit 1
 
 echo test tls1
 $ssltest -tls1 $extra || exit 1
diff --git a/apps/speed.c b/apps/speed.c
index 9886ca3..138a5f4 100644
--- a/apps/speed.c
+++ b/apps/speed.c
@@ -192,21 +192,15 @@
 #include <openssl/modes.h>
 
 #ifdef OPENSSL_FIPS
-#ifdef OPENSSL_DOING_MAKEDEPEND
-#undef AES_set_encrypt_key
-#undef AES_set_decrypt_key
-#undef DES_set_key_unchecked
-#endif
-#define BF_set_key	private_BF_set_key
-#define CAST_set_key	private_CAST_set_key
-#define idea_set_encrypt_key	private_idea_set_encrypt_key
-#define SEED_set_key	private_SEED_set_key
-#define RC2_set_key	private_RC2_set_key
-#define RC4_set_key	private_RC4_set_key
-#define DES_set_key_unchecked	private_DES_set_key_unchecked
-#define AES_set_encrypt_key	private_AES_set_encrypt_key
-#define AES_set_decrypt_key	private_AES_set_decrypt_key
-#define Camellia_set_key	private_Camellia_set_key
+#define OPENSSL_NO_BF
+#define OPENSSL_NO_CAST
+#define OPENSSL_NO_IDEA
+#define OPENSSL_NO_SEED
+#define OPENSSL_NO_RC2
+#define OPENSSL_NO_RC4
+#define OPENSSL_NO_DES
+#define OPENSSL_NO_AES
+#define OPENSSL_NO_CAMELLIA
 #endif
 
 #ifndef HAVE_FORK
diff --git a/crypto/o_init.c b/crypto/o_init.c
index db4cdc4..294dc32 100644
--- a/crypto/o_init.c
+++ b/crypto/o_init.c
@@ -55,25 +55,50 @@
 #include <e_os.h>
 #include <openssl/err.h>
 #ifdef OPENSSL_FIPS
+#include <fcntl.h>
+#include <stdlib.h>
+#include <unistd.h>
 #include <openssl/fips.h>
 #include <openssl/rand.h>
+#define CONSTRUCTOR __attribute__((constructor))
+
+static void set_fips_mode(void)
+{
+	if (!FIPS_mode()) {
+		/* Not in FIPS mode; does flag exist? */
+		int fd = open("/etc/fips/enabled", O_RDONLY);
+		if (fd != -1) { 
+			close(fd);
+			if (!FIPS_mode_set(1)) {
+				/* FIPS mode requested, but failed POST */
+				ERR_load_crypto_strings();
+				ERR_print_errors_fp(stderr);
+				abort();
+			}
+		}
+	}
+}
+#else
+#define CONSTRUCTOR
 #endif
 
 /* Perform any essential OpenSSL initialization operations.
  * Currently only sets FIPS callbacks
  */
 
-void OPENSSL_init(void)
+CONSTRUCTOR void OPENSSL_init(void)
 	{
 	static int done = 0;
 	if (done)
 		return;
 	done = 1;
 #ifdef OPENSSL_FIPS
 	FIPS_set_locking_callbacks(CRYPTO_lock, CRYPTO_add_lock);
 	FIPS_set_error_callbacks(ERR_put_error, ERR_add_error_vdata);
 	FIPS_set_malloc_callbacks(CRYPTO_malloc, CRYPTO_free);
 	RAND_init_fips();
+	/* FIPS mode initialisation: must happen after the above */
+	set_fips_mode();
 #endif
 #if 0
 	fprintf(stderr, "Called OPENSSL_init\n");
diff --git a/crypto/ec/ec2_smpl.c b/crypto/ec/ec2_smpl.c
index e0e59c7..2a97873 100644
--- a/crypto/ec/ec2_smpl.c
+++ b/crypto/ec/ec2_smpl.c
@@ -81,8 +81,13 @@
 const EC_METHOD *EC_GF2m_simple_method(void)
 	{
 #ifdef OPENSSL_FIPS
-	return fips_ec_gf2m_simple_method();
-#else
+	if (FIPS_mode())
+		{
+			return fips_ec_gf2m_simple_method();
+		}
+	else
+#endif
+	{
 	static const EC_METHOD ret = {
 		EC_FLAGS_DEFAULT_OCT,
 		NID_X9_62_characteristic_two_field,
@@ -126,7 +131,7 @@ const EC_METHOD *EC_GF2m_simple_method(void)
 		0 /* field_set_to_one */ };
 
 	return &ret;
-#endif
+	}
 	}
 
 
diff --git a/crypto/ec/ecp_mont.c b/crypto/ec/ecp_mont.c
index f04f132..cd435c2 100644
--- a/crypto/ec/ecp_mont.c
+++ b/crypto/ec/ecp_mont.c
@@ -73,8 +73,13 @@
 const EC_METHOD *EC_GFp_mont_method(void)
 	{
 #ifdef OPENSSL_FIPS
-	return fips_ec_gfp_mont_method();
-#else
+	if (FIPS_mode())
+		{
+			return fips_ec_gfp_mont_method();
+		}
+	else
+#endif
+	{
 	static const EC_METHOD ret = {
 		EC_FLAGS_DEFAULT_OCT,
 		NID_X9_62_prime_field,
@@ -115,7 +120,7 @@ const EC_METHOD *EC_GFp_mont_method(void)
 		ec_GFp_mont_field_set_to_one };
 
 	return &ret;
-#endif
+	}
 	}
 
 
diff --git a/crypto/ec/ecp_nist.c b/crypto/ec/ecp_nist.c
index aad2d5f..d52ad05 100644
--- a/crypto/ec/ecp_nist.c
+++ b/crypto/ec/ecp_nist.c
@@ -74,8 +74,13 @@
 const EC_METHOD *EC_GFp_nist_method(void)
 	{
 #ifdef OPENSSL_FIPS
-	return fips_ec_gfp_nist_method();
-#else
+	if (FIPS_mode())
+		{
+			return fips_ec_gfp_nist_method();
+		}
+	else
+#endif
+	{
 	static const EC_METHOD ret = {
 		EC_FLAGS_DEFAULT_OCT,
 		NID_X9_62_prime_field,
@@ -116,7 +121,7 @@ const EC_METHOD *EC_GFp_nist_method(void)
 		0 /* field_set_to_one */ };
 
 	return &ret;
-#endif
+	}
 	}
 
 int ec_GFp_nist_group_copy(EC_GROUP *dest, const EC_GROUP *src)
diff --git a/crypto/ec/ecp_smpl.c b/crypto/ec/ecp_smpl.c
index ef52854..6155cc9 100644
--- a/crypto/ec/ecp_smpl.c
+++ b/crypto/ec/ecp_smpl.c
@@ -74,8 +74,13 @@
 const EC_METHOD *EC_GFp_simple_method(void)
 	{
 #ifdef OPENSSL_FIPS
-	return fips_ec_gfp_simple_method();
-#else
+	if (FIPS_mode())
+		{
+			return fips_ec_gfp_simple_method();
+		}
+	else
+#endif
+	{
 	static const EC_METHOD ret = {
 		EC_FLAGS_DEFAULT_OCT,
 		NID_X9_62_prime_field,
@@ -116,7 +121,7 @@ const EC_METHOD *EC_GFp_simple_method(void)
 		0 /* field_set_to_one */ };
 
 	return &ret;
-#endif
+	}
 	}
 
 
